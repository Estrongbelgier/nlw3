{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ivan_\\\\OneDrive\\\\GITHUB\\\\nlw3\\\\app\\\\src\\\\pages\\\\CreateOrphanage\\\\SelectMapPosition\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport styles from \"./styles\";\nimport mapMarkerImg from \"../../images/happyMarker.png\";\nexport default function SelectMapPosition() {\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    latitude: 0,\n    longitude: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  function handleNextStep() {\n    navigation.navigate(\"OrphanageData\", {\n      position: position\n    });\n  }\n\n  function handleSelectMapPosition(event) {\n    setPosition(event.nativeEvent.coordinate);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    initialRegion: {\n      latitude: -22.7244976,\n      longitude: -47.6356764,\n      latitudeDelta: 0.008,\n      longitudeDelta: 0.008\n    },\n    style: styles.mapStyle,\n    onPress: handleSelectMapPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, position.latitude !== 0 && React.createElement(Marker, {\n    icon: mapMarkerImg,\n    coordinate: {\n      latitude: position.latitude,\n      longitude: position.longitude\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), position.latitude !== 0 && React.createElement(RectButton, {\n    style: styles.nextButton,\n    onPress: handleNextStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.nextButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Pr\\xF3ximo\")));\n}","map":{"version":3,"sources":["C:/Users/ivan_/OneDrive/GITHUB/nlw3/app/src/pages/CreateOrphanage/SelectMapPosition/index.tsx"],"names":["React","useState","useNavigation","RectButton","MapView","Marker","styles","mapMarkerImg","SelectMapPosition","navigation","latitude","longitude","position","setPosition","handleNextStep","navigate","handleSelectMapPosition","event","nativeEvent","coordinate","container","latitudeDelta","longitudeDelta","mapStyle","nextButton","nextButtonText"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,OAAP,IAA4BC,MAA5B,QAA0C,mBAA1C;AAEA,OAAOC,MAAP;AAEA,OAAOC,YAAP;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AAD0C,kBAGVD,QAAQ,CAAC;AAAES,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAAD,CAHE;AAAA;AAAA,MAGnCC,QAHmC;AAAA,MAGzBC,WAHyB;;AAK1C,WAASC,cAAT,GAA0B;AACxBL,IAAAA,UAAU,CAACM,QAAX,CAAoB,eAApB,EAAqC;AAAEH,MAAAA,QAAQ,EAARA;AAAF,KAArC;AACD;;AAED,WAASI,uBAAT,CAAiCC,KAAjC,EAAkD;AAChDJ,IAAAA,WAAW,CAACI,KAAK,CAACC,WAAN,CAAkBC,UAAnB,CAAX;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,aAAa,EAAE;AACbV,MAAAA,QAAQ,EAAE,CAAC,UADE;AAEbC,MAAAA,SAAS,EAAE,CAAC,UAFC;AAGbU,MAAAA,aAAa,EAAE,KAHF;AAIbC,MAAAA,cAAc,EAAE;AAJH,KADjB;AAOE,IAAA,KAAK,EAAEhB,MAAM,CAACiB,QAPhB;AAQE,IAAA,OAAO,EAAEP,uBARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGJ,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEH,YADR;AAEE,IAAA,UAAU,EAAE;AACVG,MAAAA,QAAQ,EAAEE,QAAQ,CAACF,QADT;AAEVC,MAAAA,SAAS,EAAEC,QAAQ,CAACD;AAFV,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF,EAsBGC,QAAQ,CAACF,QAAT,KAAsB,CAAtB,IACC,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ,MAAM,CAACkB,UAA1B;AAAsC,IAAA,OAAO,EAAEV,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACmB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAvBJ,CADF;AA8BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Dimensions, Text } from \"react-native\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport MapView, { MapEvent, Marker } from \"react-native-maps\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nimport mapMarkerImg from \"../../images/happyMarker.png\";\r\n\r\nexport default function SelectMapPosition() {\r\n  const navigation = useNavigation();\r\n\r\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0 });\r\n\r\n  function handleNextStep() {\r\n    navigation.navigate(\"OrphanageData\", { position });\r\n  }\r\n\r\n  function handleSelectMapPosition(event: MapEvent) {\r\n    setPosition(event.nativeEvent.coordinate);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        initialRegion={{\r\n          latitude: -22.7244976,\r\n          longitude: -47.6356764,\r\n          latitudeDelta: 0.008,\r\n          longitudeDelta: 0.008,\r\n        }}\r\n        style={styles.mapStyle}\r\n        onPress={handleSelectMapPosition}\r\n      >\r\n        {position.latitude !== 0 && (\r\n          <Marker\r\n            icon={mapMarkerImg}\r\n            coordinate={{\r\n              latitude: position.latitude,\r\n              longitude: position.longitude,\r\n            }}\r\n          />\r\n        )}\r\n      </MapView>\r\n\r\n      {position.latitude !== 0 && (\r\n        <RectButton style={styles.nextButton} onPress={handleNextStep}>\r\n          <Text style={styles.nextButtonText}>Pr√≥ximo</Text>\r\n        </RectButton>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}